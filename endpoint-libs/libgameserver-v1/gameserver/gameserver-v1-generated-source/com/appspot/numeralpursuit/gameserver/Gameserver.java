/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-12-19 23:55:21 UTC)
 * on 2014-01-25 at 01:51:37 UTC 
 * Modify at your own risk.
 */

package com.appspot.numeralpursuit.gameserver;

/**
 * Service definition for Gameserver (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GameserverRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Gameserver extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the gameserver library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://numeralpursuit.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "gameserver/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Gameserver(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Gameserver(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the GameServerEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Gameserver gameserver = new Gameserver(...);}
   *   {@code Gameserver.GameServerEndpoint.List request = gameserver.gameServerEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public GameServerEndpoint gameServerEndpoint() {
    return new GameServerEndpoint();
  }

  /**
   * The "gameServerEndpoint" collection of methods.
   */
  public class GameServerEndpoint {

    /**
     * Create a request for the method "gameServerEndpoint.addFriend".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link AddFriend#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.FriendData}
     * @return the request
     */
    public AddFriend addFriend(com.appspot.numeralpursuit.gameserver.model.FriendData content) throws java.io.IOException {
      AddFriend result = new AddFriend(content);
      initialize(result);
      return result;
    }

    public class AddFriend extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "addFriend";

      /**
       * Create a request for the method "gameServerEndpoint.addFriend".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link AddFriend#execute()} method to invoke the remote
       * operation. <p> {@link
       * AddFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.FriendData}
       * @since 1.13
       */
      protected AddFriend(com.appspot.numeralpursuit.gameserver.model.FriendData content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public AddFriend setAlt(java.lang.String alt) {
        return (AddFriend) super.setAlt(alt);
      }

      @Override
      public AddFriend setFields(java.lang.String fields) {
        return (AddFriend) super.setFields(fields);
      }

      @Override
      public AddFriend setKey(java.lang.String key) {
        return (AddFriend) super.setKey(key);
      }

      @Override
      public AddFriend setOauthToken(java.lang.String oauthToken) {
        return (AddFriend) super.setOauthToken(oauthToken);
      }

      @Override
      public AddFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddFriend) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddFriend setQuotaUser(java.lang.String quotaUser) {
        return (AddFriend) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddFriend setUserIp(java.lang.String userIp) {
        return (AddFriend) super.setUserIp(userIp);
      }

      @Override
      public AddFriend set(String parameterName, Object value) {
        return (AddFriend) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.createFriendlyGame".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link CreateFriendlyGame#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.FriendlyGameData}
     * @return the request
     */
    public CreateFriendlyGame createFriendlyGame(com.appspot.numeralpursuit.gameserver.model.FriendlyGameData content) throws java.io.IOException {
      CreateFriendlyGame result = new CreateFriendlyGame(content);
      initialize(result);
      return result;
    }

    public class CreateFriendlyGame extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "createFriendlyGame";

      /**
       * Create a request for the method "gameServerEndpoint.createFriendlyGame".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link CreateFriendlyGame#execute()} method to invoke the remote
       * operation. <p> {@link CreateFriendlyGame#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.FriendlyGameData}
       * @since 1.13
       */
      protected CreateFriendlyGame(com.appspot.numeralpursuit.gameserver.model.FriendlyGameData content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public CreateFriendlyGame setAlt(java.lang.String alt) {
        return (CreateFriendlyGame) super.setAlt(alt);
      }

      @Override
      public CreateFriendlyGame setFields(java.lang.String fields) {
        return (CreateFriendlyGame) super.setFields(fields);
      }

      @Override
      public CreateFriendlyGame setKey(java.lang.String key) {
        return (CreateFriendlyGame) super.setKey(key);
      }

      @Override
      public CreateFriendlyGame setOauthToken(java.lang.String oauthToken) {
        return (CreateFriendlyGame) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateFriendlyGame setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateFriendlyGame) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateFriendlyGame setQuotaUser(java.lang.String quotaUser) {
        return (CreateFriendlyGame) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateFriendlyGame setUserIp(java.lang.String userIp) {
        return (CreateFriendlyGame) super.setUserIp(userIp);
      }

      @Override
      public CreateFriendlyGame set(String parameterName, Object value) {
        return (CreateFriendlyGame) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.fetchFinishedGames".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link FetchFinishedGames#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameListContainer}
     * @return the request
     */
    public FetchFinishedGames fetchFinishedGames(com.appspot.numeralpursuit.gameserver.model.GameListContainer content) throws java.io.IOException {
      FetchFinishedGames result = new FetchFinishedGames(content);
      initialize(result);
      return result;
    }

    public class FetchFinishedGames extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.GameInfoCollection> {

      private static final String REST_PATH = "fetchFinishedGames";

      /**
       * Create a request for the method "gameServerEndpoint.fetchFinishedGames".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link FetchFinishedGames#execute()} method to invoke the remote
       * operation. <p> {@link FetchFinishedGames#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameListContainer}
       * @since 1.13
       */
      protected FetchFinishedGames(com.appspot.numeralpursuit.gameserver.model.GameListContainer content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.GameInfoCollection.class);
      }

      @Override
      public FetchFinishedGames setAlt(java.lang.String alt) {
        return (FetchFinishedGames) super.setAlt(alt);
      }

      @Override
      public FetchFinishedGames setFields(java.lang.String fields) {
        return (FetchFinishedGames) super.setFields(fields);
      }

      @Override
      public FetchFinishedGames setKey(java.lang.String key) {
        return (FetchFinishedGames) super.setKey(key);
      }

      @Override
      public FetchFinishedGames setOauthToken(java.lang.String oauthToken) {
        return (FetchFinishedGames) super.setOauthToken(oauthToken);
      }

      @Override
      public FetchFinishedGames setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (FetchFinishedGames) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public FetchFinishedGames setQuotaUser(java.lang.String quotaUser) {
        return (FetchFinishedGames) super.setQuotaUser(quotaUser);
      }

      @Override
      public FetchFinishedGames setUserIp(java.lang.String userIp) {
        return (FetchFinishedGames) super.setUserIp(userIp);
      }

      @Override
      public FetchFinishedGames set(String parameterName, Object value) {
        return (FetchFinishedGames) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.fetchPlayerNicks".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link FetchPlayerNicks#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.PlayerNicks}
     * @return the request
     */
    public FetchPlayerNicks fetchPlayerNicks(com.appspot.numeralpursuit.gameserver.model.PlayerNicks content) throws java.io.IOException {
      FetchPlayerNicks result = new FetchPlayerNicks(content);
      initialize(result);
      return result;
    }

    public class FetchPlayerNicks extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.PlayerNicks> {

      private static final String REST_PATH = "fetchPlayerNicks";

      /**
       * Create a request for the method "gameServerEndpoint.fetchPlayerNicks".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link FetchPlayerNicks#execute()} method to invoke the remote
       * operation. <p> {@link FetchPlayerNicks#initialize(com.google.api.client.googleapis.services.Abs
       * tractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.PlayerNicks}
       * @since 1.13
       */
      protected FetchPlayerNicks(com.appspot.numeralpursuit.gameserver.model.PlayerNicks content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.PlayerNicks.class);
      }

      @Override
      public FetchPlayerNicks setAlt(java.lang.String alt) {
        return (FetchPlayerNicks) super.setAlt(alt);
      }

      @Override
      public FetchPlayerNicks setFields(java.lang.String fields) {
        return (FetchPlayerNicks) super.setFields(fields);
      }

      @Override
      public FetchPlayerNicks setKey(java.lang.String key) {
        return (FetchPlayerNicks) super.setKey(key);
      }

      @Override
      public FetchPlayerNicks setOauthToken(java.lang.String oauthToken) {
        return (FetchPlayerNicks) super.setOauthToken(oauthToken);
      }

      @Override
      public FetchPlayerNicks setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (FetchPlayerNicks) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public FetchPlayerNicks setQuotaUser(java.lang.String quotaUser) {
        return (FetchPlayerNicks) super.setQuotaUser(quotaUser);
      }

      @Override
      public FetchPlayerNicks setUserIp(java.lang.String userIp) {
        return (FetchPlayerNicks) super.setUserIp(userIp);
      }

      @Override
      public FetchPlayerNicks set(String parameterName, Object value) {
        return (FetchPlayerNicks) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.fetchSettings".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link FetchSettings#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public FetchSettings fetchSettings() throws java.io.IOException {
      FetchSettings result = new FetchSettings();
      initialize(result);
      return result;
    }

    public class FetchSettings extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.Settings> {

      private static final String REST_PATH = "fetchSettings";

      /**
       * Create a request for the method "gameServerEndpoint.fetchSettings".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link FetchSettings#execute()} method to invoke the remote
       * operation. <p> {@link FetchSettings#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @since 1.13
       */
      protected FetchSettings() {
        super(Gameserver.this, "POST", REST_PATH, null, com.appspot.numeralpursuit.gameserver.model.Settings.class);
      }

      @Override
      public FetchSettings setAlt(java.lang.String alt) {
        return (FetchSettings) super.setAlt(alt);
      }

      @Override
      public FetchSettings setFields(java.lang.String fields) {
        return (FetchSettings) super.setFields(fields);
      }

      @Override
      public FetchSettings setKey(java.lang.String key) {
        return (FetchSettings) super.setKey(key);
      }

      @Override
      public FetchSettings setOauthToken(java.lang.String oauthToken) {
        return (FetchSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public FetchSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (FetchSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public FetchSettings setQuotaUser(java.lang.String quotaUser) {
        return (FetchSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public FetchSettings setUserIp(java.lang.String userIp) {
        return (FetchSettings) super.setUserIp(userIp);
      }

      @Override
      public FetchSettings set(String parameterName, Object value) {
        return (FetchSettings) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.forfeit".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link Forfeit#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameUpdateRequest}
     * @return the request
     */
    public Forfeit forfeit(com.appspot.numeralpursuit.gameserver.model.GameUpdateRequest content) throws java.io.IOException {
      Forfeit result = new Forfeit(content);
      initialize(result);
      return result;
    }

    public class Forfeit extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.GameUpdate> {

      private static final String REST_PATH = "forfeit";

      /**
       * Create a request for the method "gameServerEndpoint.forfeit".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link Forfeit#execute()} method to invoke the remote operation.
       * <p> {@link
       * Forfeit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameUpdateRequest}
       * @since 1.13
       */
      protected Forfeit(com.appspot.numeralpursuit.gameserver.model.GameUpdateRequest content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.GameUpdate.class);
      }

      @Override
      public Forfeit setAlt(java.lang.String alt) {
        return (Forfeit) super.setAlt(alt);
      }

      @Override
      public Forfeit setFields(java.lang.String fields) {
        return (Forfeit) super.setFields(fields);
      }

      @Override
      public Forfeit setKey(java.lang.String key) {
        return (Forfeit) super.setKey(key);
      }

      @Override
      public Forfeit setOauthToken(java.lang.String oauthToken) {
        return (Forfeit) super.setOauthToken(oauthToken);
      }

      @Override
      public Forfeit setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Forfeit) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Forfeit setQuotaUser(java.lang.String quotaUser) {
        return (Forfeit) super.setQuotaUser(quotaUser);
      }

      @Override
      public Forfeit setUserIp(java.lang.String userIp) {
        return (Forfeit) super.setUserIp(userIp);
      }

      @Override
      public Forfeit set(String parameterName, Object value) {
        return (Forfeit) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.getFriends".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link GetFriends#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetFriends getFriends() throws java.io.IOException {
      GetFriends result = new GetFriends();
      initialize(result);
      return result;
    }

    public class GetFriends extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.FriendDataCollection> {

      private static final String REST_PATH = "frienddatacollection";

      /**
       * Create a request for the method "gameServerEndpoint.getFriends".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link GetFriends#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetFriends#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetFriends() {
        super(Gameserver.this, "GET", REST_PATH, null, com.appspot.numeralpursuit.gameserver.model.FriendDataCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetFriends setAlt(java.lang.String alt) {
        return (GetFriends) super.setAlt(alt);
      }

      @Override
      public GetFriends setFields(java.lang.String fields) {
        return (GetFriends) super.setFields(fields);
      }

      @Override
      public GetFriends setKey(java.lang.String key) {
        return (GetFriends) super.setKey(key);
      }

      @Override
      public GetFriends setOauthToken(java.lang.String oauthToken) {
        return (GetFriends) super.setOauthToken(oauthToken);
      }

      @Override
      public GetFriends setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetFriends) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetFriends setQuotaUser(java.lang.String quotaUser) {
        return (GetFriends) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetFriends setUserIp(java.lang.String userIp) {
        return (GetFriends) super.setUserIp(userIp);
      }

      @Override
      public GetFriends set(String parameterName, Object value) {
        return (GetFriends) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.getNewFriend".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link GetNewFriend#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetNewFriend getNewFriend() throws java.io.IOException {
      GetNewFriend result = new GetNewFriend();
      initialize(result);
      return result;
    }

    public class GetNewFriend extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "successcode";

      /**
       * Create a request for the method "gameServerEndpoint.getNewFriend".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link GetNewFriend#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetNewFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetNewFriend() {
        super(Gameserver.this, "GET", REST_PATH, null, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetNewFriend setAlt(java.lang.String alt) {
        return (GetNewFriend) super.setAlt(alt);
      }

      @Override
      public GetNewFriend setFields(java.lang.String fields) {
        return (GetNewFriend) super.setFields(fields);
      }

      @Override
      public GetNewFriend setKey(java.lang.String key) {
        return (GetNewFriend) super.setKey(key);
      }

      @Override
      public GetNewFriend setOauthToken(java.lang.String oauthToken) {
        return (GetNewFriend) super.setOauthToken(oauthToken);
      }

      @Override
      public GetNewFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetNewFriend) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetNewFriend setQuotaUser(java.lang.String quotaUser) {
        return (GetNewFriend) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetNewFriend setUserIp(java.lang.String userIp) {
        return (GetNewFriend) super.setUserIp(userIp);
      }

      @Override
      public GetNewFriend set(String parameterName, Object value) {
        return (GetNewFriend) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.getPublicUserId".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link GetPublicUserId#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetPublicUserId getPublicUserId() throws java.io.IOException {
      GetPublicUserId result = new GetPublicUserId();
      initialize(result);
      return result;
    }

    public class GetPublicUserId extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.PublicUId> {

      private static final String REST_PATH = "publicuid";

      /**
       * Create a request for the method "gameServerEndpoint.getPublicUserId".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link GetPublicUserId#execute()} method to invoke the remote
       * operation. <p> {@link GetPublicUserId#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @since 1.13
       */
      protected GetPublicUserId() {
        super(Gameserver.this, "GET", REST_PATH, null, com.appspot.numeralpursuit.gameserver.model.PublicUId.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPublicUserId setAlt(java.lang.String alt) {
        return (GetPublicUserId) super.setAlt(alt);
      }

      @Override
      public GetPublicUserId setFields(java.lang.String fields) {
        return (GetPublicUserId) super.setFields(fields);
      }

      @Override
      public GetPublicUserId setKey(java.lang.String key) {
        return (GetPublicUserId) super.setKey(key);
      }

      @Override
      public GetPublicUserId setOauthToken(java.lang.String oauthToken) {
        return (GetPublicUserId) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPublicUserId setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPublicUserId) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPublicUserId setQuotaUser(java.lang.String quotaUser) {
        return (GetPublicUserId) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPublicUserId setUserIp(java.lang.String userIp) {
        return (GetPublicUserId) super.setUserIp(userIp);
      }

      @Override
      public GetPublicUserId set(String parameterName, Object value) {
        return (GetPublicUserId) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.getRunningGamesList".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link GetRunningGamesList#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetRunningGamesList getRunningGamesList() throws java.io.IOException {
      GetRunningGamesList result = new GetRunningGamesList();
      initialize(result);
      return result;
    }

    public class GetRunningGamesList extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.GameInfoCollection> {

      private static final String REST_PATH = "gameinfocollection";

      /**
       * Create a request for the method "gameServerEndpoint.getRunningGamesList".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link GetRunningGamesList#execute()} method to invoke the remote
       * operation. <p> {@link GetRunningGamesList#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetRunningGamesList() {
        super(Gameserver.this, "GET", REST_PATH, null, com.appspot.numeralpursuit.gameserver.model.GameInfoCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetRunningGamesList setAlt(java.lang.String alt) {
        return (GetRunningGamesList) super.setAlt(alt);
      }

      @Override
      public GetRunningGamesList setFields(java.lang.String fields) {
        return (GetRunningGamesList) super.setFields(fields);
      }

      @Override
      public GetRunningGamesList setKey(java.lang.String key) {
        return (GetRunningGamesList) super.setKey(key);
      }

      @Override
      public GetRunningGamesList setOauthToken(java.lang.String oauthToken) {
        return (GetRunningGamesList) super.setOauthToken(oauthToken);
      }

      @Override
      public GetRunningGamesList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetRunningGamesList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetRunningGamesList setQuotaUser(java.lang.String quotaUser) {
        return (GetRunningGamesList) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetRunningGamesList setUserIp(java.lang.String userIp) {
        return (GetRunningGamesList) super.setUserIp(userIp);
      }

      @Override
      public GetRunningGamesList set(String parameterName, Object value) {
        return (GetRunningGamesList) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.inviteFriendlyGame".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link InviteFriendlyGame#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameInviteData}
     * @return the request
     */
    public InviteFriendlyGame inviteFriendlyGame(com.appspot.numeralpursuit.gameserver.model.GameInviteData content) throws java.io.IOException {
      InviteFriendlyGame result = new InviteFriendlyGame(content);
      initialize(result);
      return result;
    }

    public class InviteFriendlyGame extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "inviteFriendlyGame";

      /**
       * Create a request for the method "gameServerEndpoint.inviteFriendlyGame".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link InviteFriendlyGame#execute()} method to invoke the remote
       * operation. <p> {@link InviteFriendlyGame#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameInviteData}
       * @since 1.13
       */
      protected InviteFriendlyGame(com.appspot.numeralpursuit.gameserver.model.GameInviteData content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public InviteFriendlyGame setAlt(java.lang.String alt) {
        return (InviteFriendlyGame) super.setAlt(alt);
      }

      @Override
      public InviteFriendlyGame setFields(java.lang.String fields) {
        return (InviteFriendlyGame) super.setFields(fields);
      }

      @Override
      public InviteFriendlyGame setKey(java.lang.String key) {
        return (InviteFriendlyGame) super.setKey(key);
      }

      @Override
      public InviteFriendlyGame setOauthToken(java.lang.String oauthToken) {
        return (InviteFriendlyGame) super.setOauthToken(oauthToken);
      }

      @Override
      public InviteFriendlyGame setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InviteFriendlyGame) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InviteFriendlyGame setQuotaUser(java.lang.String quotaUser) {
        return (InviteFriendlyGame) super.setQuotaUser(quotaUser);
      }

      @Override
      public InviteFriendlyGame setUserIp(java.lang.String userIp) {
        return (InviteFriendlyGame) super.setUserIp(userIp);
      }

      @Override
      public InviteFriendlyGame set(String parameterName, Object value) {
        return (InviteFriendlyGame) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.login".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.RegIdCGM}
     * @return the request
     */
    public Login login(com.appspot.numeralpursuit.gameserver.model.RegIdCGM content) throws java.io.IOException {
      Login result = new Login(content);
      initialize(result);
      return result;
    }

    public class Login extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.Settings> {

      private static final String REST_PATH = "login";

      /**
       * Create a request for the method "gameServerEndpoint.login".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
       * <p> {@link
       * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.RegIdCGM}
       * @since 1.13
       */
      protected Login(com.appspot.numeralpursuit.gameserver.model.RegIdCGM content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.Settings.class);
      }

      @Override
      public Login setAlt(java.lang.String alt) {
        return (Login) super.setAlt(alt);
      }

      @Override
      public Login setFields(java.lang.String fields) {
        return (Login) super.setFields(fields);
      }

      @Override
      public Login setKey(java.lang.String key) {
        return (Login) super.setKey(key);
      }

      @Override
      public Login setOauthToken(java.lang.String oauthToken) {
        return (Login) super.setOauthToken(oauthToken);
      }

      @Override
      public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Login) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Login setQuotaUser(java.lang.String quotaUser) {
        return (Login) super.setQuotaUser(quotaUser);
      }

      @Override
      public Login setUserIp(java.lang.String userIp) {
        return (Login) super.setUserIp(userIp);
      }

      @Override
      public Login set(String parameterName, Object value) {
        return (Login) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.registerForRandomGame".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link RegisterForRandomGame#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public RegisterForRandomGame registerForRandomGame() throws java.io.IOException {
      RegisterForRandomGame result = new RegisterForRandomGame();
      initialize(result);
      return result;
    }

    public class RegisterForRandomGame extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "registerForRandomGame";

      /**
       * Create a request for the method "gameServerEndpoint.registerForRandomGame".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link RegisterForRandomGame#execute()} method to invoke the
       * remote operation. <p> {@link RegisterForRandomGame#initialize(com.google.api.client.googleapis.
       * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected RegisterForRandomGame() {
        super(Gameserver.this, "POST", REST_PATH, null, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public RegisterForRandomGame setAlt(java.lang.String alt) {
        return (RegisterForRandomGame) super.setAlt(alt);
      }

      @Override
      public RegisterForRandomGame setFields(java.lang.String fields) {
        return (RegisterForRandomGame) super.setFields(fields);
      }

      @Override
      public RegisterForRandomGame setKey(java.lang.String key) {
        return (RegisterForRandomGame) super.setKey(key);
      }

      @Override
      public RegisterForRandomGame setOauthToken(java.lang.String oauthToken) {
        return (RegisterForRandomGame) super.setOauthToken(oauthToken);
      }

      @Override
      public RegisterForRandomGame setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RegisterForRandomGame) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RegisterForRandomGame setQuotaUser(java.lang.String quotaUser) {
        return (RegisterForRandomGame) super.setQuotaUser(quotaUser);
      }

      @Override
      public RegisterForRandomGame setUserIp(java.lang.String userIp) {
        return (RegisterForRandomGame) super.setUserIp(userIp);
      }

      @Override
      public RegisterForRandomGame set(String parameterName, Object value) {
        return (RegisterForRandomGame) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.removeAllFinishedGames".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link RemoveAllFinishedGames#execute()} method to invoke the
     * remote operation.
     *
     * @return the request
     */
    public RemoveAllFinishedGames removeAllFinishedGames() throws java.io.IOException {
      RemoveAllFinishedGames result = new RemoveAllFinishedGames();
      initialize(result);
      return result;
    }

    public class RemoveAllFinishedGames extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "allfinishedgames";

      /**
       * Create a request for the method "gameServerEndpoint.removeAllFinishedGames".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link RemoveAllFinishedGames#execute()} method to invoke the
       * remote operation. <p> {@link RemoveAllFinishedGames#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected RemoveAllFinishedGames() {
        super(Gameserver.this, "POST", REST_PATH, null, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public RemoveAllFinishedGames setAlt(java.lang.String alt) {
        return (RemoveAllFinishedGames) super.setAlt(alt);
      }

      @Override
      public RemoveAllFinishedGames setFields(java.lang.String fields) {
        return (RemoveAllFinishedGames) super.setFields(fields);
      }

      @Override
      public RemoveAllFinishedGames setKey(java.lang.String key) {
        return (RemoveAllFinishedGames) super.setKey(key);
      }

      @Override
      public RemoveAllFinishedGames setOauthToken(java.lang.String oauthToken) {
        return (RemoveAllFinishedGames) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveAllFinishedGames setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveAllFinishedGames) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveAllFinishedGames setQuotaUser(java.lang.String quotaUser) {
        return (RemoveAllFinishedGames) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveAllFinishedGames setUserIp(java.lang.String userIp) {
        return (RemoveAllFinishedGames) super.setUserIp(userIp);
      }

      @Override
      public RemoveAllFinishedGames set(String parameterName, Object value) {
        return (RemoveAllFinishedGames) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.removeFriend".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link RemoveFriend#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.FriendData}
     * @return the request
     */
    public RemoveFriend removeFriend(com.appspot.numeralpursuit.gameserver.model.FriendData content) throws java.io.IOException {
      RemoveFriend result = new RemoveFriend(content);
      initialize(result);
      return result;
    }

    public class RemoveFriend extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "friend";

      /**
       * Create a request for the method "gameServerEndpoint.removeFriend".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link RemoveFriend#execute()} method to invoke the remote
       * operation. <p> {@link
       * RemoveFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.FriendData}
       * @since 1.13
       */
      protected RemoveFriend(com.appspot.numeralpursuit.gameserver.model.FriendData content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public RemoveFriend setAlt(java.lang.String alt) {
        return (RemoveFriend) super.setAlt(alt);
      }

      @Override
      public RemoveFriend setFields(java.lang.String fields) {
        return (RemoveFriend) super.setFields(fields);
      }

      @Override
      public RemoveFriend setKey(java.lang.String key) {
        return (RemoveFriend) super.setKey(key);
      }

      @Override
      public RemoveFriend setOauthToken(java.lang.String oauthToken) {
        return (RemoveFriend) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveFriend) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveFriend setQuotaUser(java.lang.String quotaUser) {
        return (RemoveFriend) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveFriend setUserIp(java.lang.String userIp) {
        return (RemoveFriend) super.setUserIp(userIp);
      }

      @Override
      public RemoveFriend set(String parameterName, Object value) {
        return (RemoveFriend) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.removeGameFromActive".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link RemoveGameFromActive#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameUpdate}
     * @return the request
     */
    public RemoveGameFromActive removeGameFromActive(com.appspot.numeralpursuit.gameserver.model.GameUpdate content) throws java.io.IOException {
      RemoveGameFromActive result = new RemoveGameFromActive(content);
      initialize(result);
      return result;
    }

    public class RemoveGameFromActive extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "gamefromactive";

      /**
       * Create a request for the method "gameServerEndpoint.removeGameFromActive".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link RemoveGameFromActive#execute()} method to invoke the
       * remote operation. <p> {@link RemoveGameFromActive#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameUpdate}
       * @since 1.13
       */
      protected RemoveGameFromActive(com.appspot.numeralpursuit.gameserver.model.GameUpdate content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public RemoveGameFromActive setAlt(java.lang.String alt) {
        return (RemoveGameFromActive) super.setAlt(alt);
      }

      @Override
      public RemoveGameFromActive setFields(java.lang.String fields) {
        return (RemoveGameFromActive) super.setFields(fields);
      }

      @Override
      public RemoveGameFromActive setKey(java.lang.String key) {
        return (RemoveGameFromActive) super.setKey(key);
      }

      @Override
      public RemoveGameFromActive setOauthToken(java.lang.String oauthToken) {
        return (RemoveGameFromActive) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveGameFromActive setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveGameFromActive) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveGameFromActive setQuotaUser(java.lang.String quotaUser) {
        return (RemoveGameFromActive) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveGameFromActive setUserIp(java.lang.String userIp) {
        return (RemoveGameFromActive) super.setUserIp(userIp);
      }

      @Override
      public RemoveGameFromActive set(String parameterName, Object value) {
        return (RemoveGameFromActive) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.requestGameUpdate".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link RequestGameUpdate#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameUpdateRequest}
     * @return the request
     */
    public RequestGameUpdate requestGameUpdate(com.appspot.numeralpursuit.gameserver.model.GameUpdateRequest content) throws java.io.IOException {
      RequestGameUpdate result = new RequestGameUpdate(content);
      initialize(result);
      return result;
    }

    public class RequestGameUpdate extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.GameUpdate> {

      private static final String REST_PATH = "requestGameUpdate";

      /**
       * Create a request for the method "gameServerEndpoint.requestGameUpdate".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link RequestGameUpdate#execute()} method to invoke the remote
       * operation. <p> {@link RequestGameUpdate#initialize(com.google.api.client.googleapis.services.Ab
       * stractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameUpdateRequest}
       * @since 1.13
       */
      protected RequestGameUpdate(com.appspot.numeralpursuit.gameserver.model.GameUpdateRequest content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.GameUpdate.class);
      }

      @Override
      public RequestGameUpdate setAlt(java.lang.String alt) {
        return (RequestGameUpdate) super.setAlt(alt);
      }

      @Override
      public RequestGameUpdate setFields(java.lang.String fields) {
        return (RequestGameUpdate) super.setFields(fields);
      }

      @Override
      public RequestGameUpdate setKey(java.lang.String key) {
        return (RequestGameUpdate) super.setKey(key);
      }

      @Override
      public RequestGameUpdate setOauthToken(java.lang.String oauthToken) {
        return (RequestGameUpdate) super.setOauthToken(oauthToken);
      }

      @Override
      public RequestGameUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RequestGameUpdate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RequestGameUpdate setQuotaUser(java.lang.String quotaUser) {
        return (RequestGameUpdate) super.setQuotaUser(quotaUser);
      }

      @Override
      public RequestGameUpdate setUserIp(java.lang.String userIp) {
        return (RequestGameUpdate) super.setUserIp(userIp);
      }

      @Override
      public RequestGameUpdate set(String parameterName, Object value) {
        return (RequestGameUpdate) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.sendChatMessage".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link SendChatMessage#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.EndpointChatMessage}
     * @return the request
     */
    public SendChatMessage sendChatMessage(com.appspot.numeralpursuit.gameserver.model.EndpointChatMessage content) throws java.io.IOException {
      SendChatMessage result = new SendChatMessage(content);
      initialize(result);
      return result;
    }

    public class SendChatMessage extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "sendChatMessage";

      /**
       * Create a request for the method "gameServerEndpoint.sendChatMessage".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link SendChatMessage#execute()} method to invoke the remote
       * operation. <p> {@link SendChatMessage#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.EndpointChatMessage}
       * @since 1.13
       */
      protected SendChatMessage(com.appspot.numeralpursuit.gameserver.model.EndpointChatMessage content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public SendChatMessage setAlt(java.lang.String alt) {
        return (SendChatMessage) super.setAlt(alt);
      }

      @Override
      public SendChatMessage setFields(java.lang.String fields) {
        return (SendChatMessage) super.setFields(fields);
      }

      @Override
      public SendChatMessage setKey(java.lang.String key) {
        return (SendChatMessage) super.setKey(key);
      }

      @Override
      public SendChatMessage setOauthToken(java.lang.String oauthToken) {
        return (SendChatMessage) super.setOauthToken(oauthToken);
      }

      @Override
      public SendChatMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SendChatMessage) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SendChatMessage setQuotaUser(java.lang.String quotaUser) {
        return (SendChatMessage) super.setQuotaUser(quotaUser);
      }

      @Override
      public SendChatMessage setUserIp(java.lang.String userIp) {
        return (SendChatMessage) super.setUserIp(userIp);
      }

      @Override
      public SendChatMessage set(String parameterName, Object value) {
        return (SendChatMessage) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.unregisterForRandomGame".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link UnregisterForRandomGame#execute()} method to invoke the
     * remote operation.
     *
     * @return the request
     */
    public UnregisterForRandomGame unregisterForRandomGame() throws java.io.IOException {
      UnregisterForRandomGame result = new UnregisterForRandomGame();
      initialize(result);
      return result;
    }

    public class UnregisterForRandomGame extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "unregisterForRandomGame";

      /**
       * Create a request for the method "gameServerEndpoint.unregisterForRandomGame".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link UnregisterForRandomGame#execute()} method to invoke the
       * remote operation. <p> {@link UnregisterForRandomGame#initialize(com.google.api.client.googleapi
       * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected UnregisterForRandomGame() {
        super(Gameserver.this, "POST", REST_PATH, null, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public UnregisterForRandomGame setAlt(java.lang.String alt) {
        return (UnregisterForRandomGame) super.setAlt(alt);
      }

      @Override
      public UnregisterForRandomGame setFields(java.lang.String fields) {
        return (UnregisterForRandomGame) super.setFields(fields);
      }

      @Override
      public UnregisterForRandomGame setKey(java.lang.String key) {
        return (UnregisterForRandomGame) super.setKey(key);
      }

      @Override
      public UnregisterForRandomGame setOauthToken(java.lang.String oauthToken) {
        return (UnregisterForRandomGame) super.setOauthToken(oauthToken);
      }

      @Override
      public UnregisterForRandomGame setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UnregisterForRandomGame) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UnregisterForRandomGame setQuotaUser(java.lang.String quotaUser) {
        return (UnregisterForRandomGame) super.setQuotaUser(quotaUser);
      }

      @Override
      public UnregisterForRandomGame setUserIp(java.lang.String userIp) {
        return (UnregisterForRandomGame) super.setUserIp(userIp);
      }

      @Override
      public UnregisterForRandomGame set(String parameterName, Object value) {
        return (UnregisterForRandomGame) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.updateGame".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link UpdateGame#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameUpdate}
     * @return the request
     */
    public UpdateGame updateGame(com.appspot.numeralpursuit.gameserver.model.GameUpdate content) throws java.io.IOException {
      UpdateGame result = new UpdateGame(content);
      initialize(result);
      return result;
    }

    public class UpdateGame extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.GameUpdate> {

      private static final String REST_PATH = "gameupdate";

      /**
       * Create a request for the method "gameServerEndpoint.updateGame".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link UpdateGame#execute()} method to invoke the remote
       * operation. <p> {@link
       * UpdateGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.GameUpdate}
       * @since 1.13
       */
      protected UpdateGame(com.appspot.numeralpursuit.gameserver.model.GameUpdate content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.GameUpdate.class);
      }

      @Override
      public UpdateGame setAlt(java.lang.String alt) {
        return (UpdateGame) super.setAlt(alt);
      }

      @Override
      public UpdateGame setFields(java.lang.String fields) {
        return (UpdateGame) super.setFields(fields);
      }

      @Override
      public UpdateGame setKey(java.lang.String key) {
        return (UpdateGame) super.setKey(key);
      }

      @Override
      public UpdateGame setOauthToken(java.lang.String oauthToken) {
        return (UpdateGame) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateGame setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateGame) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateGame setQuotaUser(java.lang.String quotaUser) {
        return (UpdateGame) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateGame setUserIp(java.lang.String userIp) {
        return (UpdateGame) super.setUserIp(userIp);
      }

      @Override
      public UpdateGame set(String parameterName, Object value) {
        return (UpdateGame) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameServerEndpoint.updateSettings".
     *
     * This request holds the parameters needed by the the gameserver server.  After setting any
     * optional parameters, call the {@link UpdateSettings#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.numeralpursuit.gameserver.model.Settings}
     * @return the request
     */
    public UpdateSettings updateSettings(com.appspot.numeralpursuit.gameserver.model.Settings content) throws java.io.IOException {
      UpdateSettings result = new UpdateSettings(content);
      initialize(result);
      return result;
    }

    public class UpdateSettings extends GameserverRequest<com.appspot.numeralpursuit.gameserver.model.SuccessCode> {

      private static final String REST_PATH = "successcode";

      /**
       * Create a request for the method "gameServerEndpoint.updateSettings".
       *
       * This request holds the parameters needed by the the gameserver server.  After setting any
       * optional parameters, call the {@link UpdateSettings#execute()} method to invoke the remote
       * operation. <p> {@link UpdateSettings#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.appspot.numeralpursuit.gameserver.model.Settings}
       * @since 1.13
       */
      protected UpdateSettings(com.appspot.numeralpursuit.gameserver.model.Settings content) {
        super(Gameserver.this, "POST", REST_PATH, content, com.appspot.numeralpursuit.gameserver.model.SuccessCode.class);
      }

      @Override
      public UpdateSettings setAlt(java.lang.String alt) {
        return (UpdateSettings) super.setAlt(alt);
      }

      @Override
      public UpdateSettings setFields(java.lang.String fields) {
        return (UpdateSettings) super.setFields(fields);
      }

      @Override
      public UpdateSettings setKey(java.lang.String key) {
        return (UpdateSettings) super.setKey(key);
      }

      @Override
      public UpdateSettings setOauthToken(java.lang.String oauthToken) {
        return (UpdateSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateSettings setQuotaUser(java.lang.String quotaUser) {
        return (UpdateSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateSettings setUserIp(java.lang.String userIp) {
        return (UpdateSettings) super.setUserIp(userIp);
      }

      @Override
      public UpdateSettings set(String parameterName, Object value) {
        return (UpdateSettings) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Gameserver}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Gameserver}. */
    @Override
    public Gameserver build() {
      return new Gameserver(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GameserverRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGameserverRequestInitializer(
        GameserverRequestInitializer gameserverRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(gameserverRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
